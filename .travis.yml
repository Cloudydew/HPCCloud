language: python
python:
    - "2.7"
    - "3.4"

node_js:
    - "4.1"

sudo: false
notifications:
    email:
        recipients:
            - sebastien.jourdain@kitware.com
            - tristan.wright@kitware.com
            - chris.harris@kitware.com
        on_success: change
        on_failure: always
cache:
    directories:
        - node_modules
        - $HOME/.cache/pip

compiler:
    - gcc
before_install:
    # First install Girder
    - pushd "${HOME}/build"
    - git clone https://github.com/girder/girder.git
    - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi
    - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.0.7; export PY_COVG="OFF"; else export MONGO_VERSION=2.6.11; export PY_COVG="ON"; fi
    - export IGNORE_PLUGINS=celery_jobs,geospatial,google_analytics,hdfs_assetstore,jquery_widgets,metadata_extractor
    - girder/scripts/InstallPythonRequirements.py --mode=dev --ignore-plugins=${IGNORE_PLUGINS}
    - pip install girder/
    - CACHE=$HOME/.cache source ./girder/scripts/install_mongo.sh
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version
    # Install plugins
    - popd
    - ln -s "${HOME}/build/Kitware/HPCCloud/server/hpccloud" "${HOME}/build/girder/plugins/hpccloud"
    - ln -s "${HOME}/build/Kitware/HPCCloud/server/pvwproxy" "${HOME}/build/girder/plugins/pvwproxy"
    # Install CMake
    - pushd "${HOME}"
    - curl -L "http://cmake.org/files/v3.1/cmake-3.1.0-Linux-x86_64.tar.gz" | gunzip -c | tar x
    - cd cmake-*/bin && export PATH="${PWD}:${PATH}"
    - popd
    - cmake --version
    - pip install -U pip virtualenv
    - nvm install 4.1

install:
    - pip install -U -r requirements.txt

script:
    # Run client tests, only with python 2.7
    - if [ -n "${PY2}" ]; then npm install; fi
    - if [ -n "${PY2}" ]; then npm run build:release; fi
    # Now run server tests
    - mkdir _girder_build
    - pushd _girder_build
    - cmake -DBUILD_JAVASCRIPT_TESTS:BOOL=OFF -DPYTHON_COVERAGE:BOOL=OFF -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} "${HOME}/build/girder"
    - ctest -R hpccloud -VV
    - ctest -R pvwproxy -VV

after_success:
    - npm run semantic-release
